apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" (include "firezone.fullname" $) "web" }}
  labels:
    {{- include "firezone.web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.web.autoscaling.enabled }}
  replicas: {{ .Values.web.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.web.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "firezone.web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.web.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "firezone.web.labels" . | nindent 8 }}
        {{- with .Values.web.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.web.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "firezone.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.web.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.web.securityContext | nindent 12 }}
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "firezone.fullname" . }}
          env:
            - name: PHOENIX_HTTP_WEB_PORT
              value: {{ quote .Values.web.service.port }}
            - name: EXTERNAL_URL
              value: {{ required "Missing `firezone.externalWebURL`" .Values.global.externalWebURL }}
            - name: API_URL_OVERRIDE
              value: {{ required "Missing `firezone.externalApiWSURL`" .Values.global.externalApiWSURL }}
            - name: OUTBOUND_EMAIL_ADAPTER_OPTS
              valueFrom:
                secretKeyRef:
                  name: {{ required "Missing `firezone.email.opts.secret`" .Values.global.email.opts.secret }}
                  key: {{ required "Missing `firezone.email.opts.key`" .Values.global.email.opts.key }}
            - name: ERLANG_DISTRIBUTION_PORT
              value: {{ quote .Values.global.erlangCluster.distributionPort }}
            - name: RELEASE_NAME
              value: {{ .Values.web.releaseName }}
            - name: RELEASE_HOSTNAME
              {{- if .Values.global.erlangCluster.enableKubernetesClusterModule }}
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
              {{- else }}
              value: {{ .Values.web.releaseHostname }}
              {{- end }}
            - name: RELEASE_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ required "Missing `firezone.erlangCluster.cookie.secret`" .Values.global.erlangCluster.cookie.secret }}
                  key: {{ required "Missing `firezone.erlangCluster.cookie.key`" .Values.global.erlangCluster.cookie.key }}
            - name: BACKGROUND_JOBS_ENABLED
              value: {{ .Values.web.backgroundJobsEnabled | quote }}
            {{ include "firezone.database.auth" . | nindent 12 }}
            {{ include "firezone.secrets" . | nindent 12 }}
            {{- with .Values.web.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .Values.global.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.web.service.port }}
              protocol: TCP
            - name: epmd
              containerPort: 4369
              protocol: TCP
            - name: distribution
              containerPort: {{ .Values.global.erlangCluster.distributionPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          {{- with .Values.web.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.web.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
