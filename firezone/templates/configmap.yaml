apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "firezone.fullname" . }}
  labels:
    {{- include "firezone.labels" . | nindent 4 }}
data:
  # Registry
  DOCKER_REGISTRY: {{ .Values.global.dockerRegistry }}
  # Elixir Logger
  LOG_LEVEL: {{ .Values.global.logLevel }}
  # Traces
  {{- if .Values.global.traces.enabled }}
  OTLP_ENDPOINT: {{ required "Missing a valid opentelemetry endpoint" .Values.global.traces.opentelemetryEndpoint }}
  {{- end }}
  AUTH_PROVIDER_ADAPTERS: {{ join "," .Values.global.authProviders }}
  # Email
  OUTBOUND_EMAIL_ADAPTER: {{ .Values.global.email.adapter }}
  OUTBOUND_EMAIL_FROM: {{ .Values.global.email.from }}
  # Database
  DATABASE_HOST: {{ required "Missing `firezone.database.host`" .Values.global.database.host }}
  DATABASE_PORT: {{ quote (required "Missing `firezone.database.port`" .Values.global.database.port) }}
  DATABASE_NAME: {{ required "Missing `firezone.database.database`" .Values.global.database.database }}
  DATABASE_SSL_ENABLED: {{ quote .Values.global.database.ssl.enabled }}
  {{- if .Values.global.database.ssl.enabled }}
  DATABASE_SSL_OPTS: {{ .Values.global.database.ssl.opts | toJson }}
  {{- end }}
  # Erlang Cluster
  ERLANG_DISTRIBUTION_PORT: {{ quote .Values.global.erlangCluster.distributionPort }}
  {{- if .Values.global.erlangCluster.enableKubernetesClusterModule }}
  ERLANG_CLUSTER_ADAPTER: Elixir.Cluster.Strategy.Kubernetes
  ERLANG_CLUSTER_ADAPTER_CONFIG: |
    {
      "mode":"ip",
      "kubernetes_node_basename":"{{ .Values.web.releaseName }}",
      "kubernetes_selector":"{{ .Values.global.erlangCluster.kubernetes.selector.key }}={{ .Values.global.erlangCluster.kubernetes.selector.value }}",
      "kubernetes_namespace":"{{ .Release.Namespace }}",
      "kubernetes_ip_lookup_mode":"endpoints"
    }
  {{- else }}
  ERLANG_CLUSTER_ADAPTER: {{ .Values.global.erlangCluster.custom.adapter }}
  ERLANG_CLUSTER_ADAPTER_CONFIG: {{ .Values.global.erlangCluster.custom.opts }}
  {{- end }}
  CLUSTER_DOMAIN: {{ .Values.clusterDomain }}
