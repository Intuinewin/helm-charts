nameOverride: ""
fullnameOverride: ""
clusterDomain: cluster.local

global:
  logLevel: debug
  dockerRegistry: ghcr.io/firezone

  # External http web URL
  # https://firezone.domain.tld
  externalWebURL:
  # External websocket API URL
  # wss://api.firezone.domain.tld
  externalApiWSURL:
  # https://api.firezone.domain.tld
  externalApiURL:

  # OpenTelemetry
  otlp:
    # HTTP Endpoint
    endpoint:

  database:
    host:
    port:
    database:
    ssl:
      enabled: false
      opts:
    username:
      secret:
      key: username
    password:
      secret:
      key: password
    pool_size:
    parameters:

  erlangCluster:
    epmdPort: 4369
    distributionPort: 9000
    enableKubernetesClusterModule: true
    kubernetes:
      selector:
        key: erlangcluster
        value: firezone
    # If using a custom adapter you'll probably need to update `web/api.releaseName` and `web/api.releaseHostname`
    custom:
      adapter:
      opts:
    cookie:
      secret:
      key: RELEASE_COOKIE

  phoenix:
    keyBase:
      secret:
      key: SECRET_KEY_BASE
    liveViewSalt:
      secret:
      key: LIVE_VIEW_SIGNING_SALT
    cookieSigningSalt:
      secret:
      key: COOKIE_SIGNING_SALT
    cookieEncryptionSalt:
      secret:
      key: COOKIE_ENCRYPTION_SALT

  tokens:
    keyBase:
      secret:
      key: TOKENS_KEY_BASE
    salt:
      secret:
      key: TOKENS_SALT

  email:
    adapter: Elixir.Swoosh.Adapters.SMTP
    from: firezone@domain.tld
    opts:
      secret:
      key: OUTBOUND_EMAIL_ADAPTER_OPTS

  authProviders:
    - token
    - email

  extraEnv: []

web:
  replicaCount: 1
  revisionHistoryLimit: 10

  image:
    repository: ghcr.io/firezone/web
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []

  extraEnv: []
  releaseName: firezone
  # Only needed if kubernetes cluster module is disabled
  releaseHostname:

  backgroundJobsEnabled: false

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true

  service:
    type: ClusterIP
    port: 8000

  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  volumes:
    - emptyDir: {}
      name: var-firezone

  volumeMounts:
    - mountPath: /var/firezone
      name: var-firezone

  nodeSelector: {}

  tolerations: []

  affinity: {}

api:
  replicaCount: 1
  revisionHistoryLimit: 10

  image:
    repository: ghcr.io/firezone/api
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  extraEnv: []
  releaseName: firezone
  # Only needed if kubernetes cluster module is disabled
  releaseHostname:

  backgroundJobsEnabled: false

  imagePullSecrets: []

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true

  service:
    type: ClusterIP
    port: 8000

  ingress:
    enabled: false
    className: ""
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  volumes:
    - emptyDir: {}
      name: var-firezone

  volumeMounts:
    - mountPath: /var/firezone
      name: var-firezone

  nodeSelector: {}

  tolerations: []

  affinity: {}

domain:
  replicaCount: 1
  revisionHistoryLimit: 10

  image:
    repository: ghcr.io/firezone/domain
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  extraEnv: []
  releaseName: firezone
  # Only needed if kubernetes cluster module is disabled
  releaseHostname:

  backgroundJobsEnabled: true

  imagePullSecrets: []

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  volumes:
    - emptyDir: {}
      name: var-firezone

  volumeMounts:
    - mountPath: /var/firezone
      name: var-firezone

  nodeSelector: {}

  tolerations: []

  affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
